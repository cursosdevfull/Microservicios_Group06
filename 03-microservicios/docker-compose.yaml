version: "3.8"

services:
  mongo-orders-ms:
    image: mongo:3.6
    container_name: mongo-ms-orders
    ports:
      - "27017:27017"
    volumes:
      - mongo_order_volume:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=12345
    networks:
      - net-ms

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-broker
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2s
    networks:
      - net-ms

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    image: img-gateway
    container_name: gateway
    ports:
      - "9000:9000"
    environment:
      - PORT=9000
      - PATH_MS_ORDER=http://orders-ms:8080
    networks:
      - net-ms
    depends_on:
      - mongo-orders-ms
      - rabbitmq
    restart: always
  orders-ms:
    build:
      context: .
      dockerfile: orders-ms/Dockerfile
    image: img-orders-ms
    container_name: orders-ms
    environment:
      - PORT=8080
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=12345
      - MONGO_HOST=mongo-orders-ms
      - MONGO_PORT=27017
      - MONGO_DATABASE=order
      - MONGO_AUTH_SOURCE=admin
      - RABBITMQ_HOST=rabbitmq:5672
    networks:
      - net-ms
    depends_on:
      - mongo-orders-ms
      - rabbitmq
    restart: always

  payments-ms:
    build:
      context: .
      dockerfile: payments-ms/Dockerfile
    image: img-payments-ms
    container_name: payments-ms
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=12345
      - MONGO_HOST=mongo-orders-ms
      - MONGO_PORT=27017
      - MONGO_DATABASE=payment
      - MONGO_AUTH_SOURCE=admin
      - RABBITMQ_HOST=rabbitmq:5672
    networks:
      - net-ms
    depends_on:
      - mongo-orders-ms
      - rabbitmq
    restart: always

  stores-ms:
    build:
      context: .
      dockerfile: stores-ms/Dockerfile
    image: img-stores-ms
    container_name: stores-ms
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=12345
      - MONGO_HOST=mongo-orders-ms
      - MONGO_PORT=27017
      - MONGO_DATABASE=store
      - MONGO_AUTH_SOURCE=admin
      - RABBITMQ_HOST=rabbitmq:5672
    networks:
      - net-ms
    depends_on:
      - mongo-orders-ms
      - rabbitmq
    restart: always

  deliveries-ms:
    build:
      context: .
      dockerfile: deliveries-ms/Dockerfile
    image: img-deliveries-ms
    container_name: deliveries-ms
    ports:
      - "8083:8083"
    environment:
      - PORT=8083
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=12345
      - MONGO_HOST=mongo-orders-ms
      - MONGO_PORT=27017
      - MONGO_DATABASE=delivery
      - MONGO_AUTH_SOURCE=admin
      - RABBITMQ_HOST=rabbitmq:5672
    networks:
      - net-ms
    depends_on:
      - mongo-orders-ms
      - rabbitmq
    restart: always

volumes:
  mongo_order_volume:

networks:
  net-ms:
